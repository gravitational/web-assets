"use strict";(self.webpackChunk_gravitational_teleport=self.webpackChunk_gravitational_teleport||[]).push([[438],{1653:(e,t,n)=>{n.r(t),n.d(t,{default:()=>v});var s=n(2784),a=n(7849),r=n(7067),o=n(694),l=n(2682),i=n(2398),c=n(3652),u=n(3937);const m=e=>{let{id:t,onEdit:n,onDelete:a}=e;return s.createElement(c.bL,{align:"right"},s.createElement(u.j2,null,s.createElement(u.sN,{onClick:()=>n(t)},"Edit..."),s.createElement(u.sN,{onClick:()=>a(t)},"Delete...")))},d=function(e){let{items:t=[],pageSize:n=20,onEdit:a,onDelete:r}=e;return s.createElement(c.ZP,{data:t,columns:[{key:"name",headerText:"Name"},{altKey:"options-btn",render:e=>{let{id:t}=e;return s.createElement(m,{id:t,onEdit:a,onDelete:r})}}],emptyText:"No Roles Found",pagination:{pageSize:n},isSearchable:!0})};var p=n(369),h=n(4696);const b=function(e){const{name:t,onClose:n,onDelete:r}=e,{attempt:o,run:l}=(0,h.Z)(),i="processing"===o.status;return s.createElement(p.ZP,{disableEscapeKeyDown:!1,onClose:n,open:!0},s.createElement(p.fK,null,s.createElement(p.$N,null,"Remove Role?")),s.createElement(p.cZ,{width:"450px"},"failed"===o.status&&s.createElement(a.bZ,{children:o.statusText}),s.createElement(a.xv,{typography:"paragraph",mb:"6"},"Are you sure you want to delete role"," ",s.createElement(a.xv,{as:"span",bold:!0,color:"primary.contrastText"},t)," ","?")),s.createElement(p.cN,null,s.createElement(a.U3,{mr:"3",disabled:i,onClick:function(){l((()=>r())).then((e=>e&&n()))}},"Yes, Remove Role"),s.createElement(a.PL,{disabled:i,onClick:n},"Cancel")))};const g={role:"kind: role\nmetadata:\n  # insert the name of your role here:\n  name: new_role_name\nspec:\n  # This example defines a typical role. It allows listing all resources\n  # with typical developer credentials.\n  allow:\n    # List of Kubernetes cluster users can access the k8s API\n    kubernetes_labels:\n      '*': '*'\n    # This role is mapped to Kubernetes 'developer' group.\n    kubernetes_groups:\n    - '{{internal.kubernetes_groups}}'\n    - developer\n    kubernetes_users:\n    - '{{internal.kubernetes_users}}'\n    - 'dev'\n    # List of allowed SSH logins\n    logins: ['{{internal.logins}}', ubuntu, debian]\n\n    # List of node labels that users can SSH into\n    node_labels:\n      '*': '*'\n      \n    # List of application labels users can access\n    app_labels:    \n      '*': '*'\n      \n    # List of database labels users can access database servers\n    db_labels:\n      '*': '*'\n    # List of databases on the database server users can access\n    db_names:\n    - '{{internal.db_names}}'\n    - '*'\n    # List of database users allowed to open database connections with\n    db_users:\n    - '{{internal.db_users}}'\n    - developer\n    \n    # List of windows desktop access labels that users can open desktop sessions to\n    windows_desktop_labels:\n      '*': '*'\n    # Windows logins a user is allowed to use for desktop sessions.\n    windows_desktop_logins:\n    - '{{internal.windows_logins}}'\n    - developer\n\n    # RBAC rules for various resources within a cluster. This\n    # example provides access to the Audit Log and replaying a user's own sessions.\n    rules:\n    - resources:\n      - event\n      verbs:\n      - list\n      - read\n    - resources:\n      - session\n      verbs:\n      - read\n      - list\n      where: contains(session.participants, user.metadata.name)\n\n  # The 'deny' section can have settings that override their 'allow' counterparts\n  # It uses the same format as the 'allow' section\n  deny:\n    logins: ['guest']\n\n  options:\n      # Limits user credentials to 8 hours. After the time to live (TTL) expires,\n      # users must re-login\n      max_session_ttl: 8h0m0s\nversion: v5\n"};function E(e){const{items:t,remove:n,save:i,attempt:c}=e,u=(0,l.Z)(t,g),m="creating"===u.status?"Create a new role":"Edit role";return s.createElement(r.Ob,null,s.createElement(r.OX,{alignItems:"center"},s.createElement(r.u4,null,"Roles"),s.createElement(a.DF,{ml:"auto",width:"240px",onClick:()=>u.create("role")},"CREATE NEW ROLE")),"failed"===c.status&&s.createElement(a.bZ,{children:c.statusText}),"processing"===c.status&&s.createElement(a.xu,{textAlign:"center",m:10},s.createElement(a.z$,null)),"success"===c.status&&s.createElement(a.kC,null,s.createElement(a.xu,{width:"100%",mr:"6",mb:"4"},s.createElement(d,{items:t,onEdit:u.edit,onDelete:u.remove})),s.createElement(a.xu,{ml:"auto",width:"240px",color:"text.primary",style:{flexShrink:0}},s.createElement(a.xv,{typography:"h6",mb:3,caps:!0},"Role-based access control"),s.createElement(a.xv,{typography:"subtitle1",mb:3},"Kubernetes and SSH authentication in one place. A Teleport role can be assigned based on user identity when used with single sign-on (SSO)."),s.createElement(a.xv,null,"Learn more in"," ",s.createElement(a.rU,{color:"light",target:"_blank",href:"https://goteleport.com/docs/access-controls/guides/role-templates/"},"the cluster management (RBAC)")," ","section of online documentation."))),("creating"===u.status||"editing"===u.status)&&s.createElement(o.Z,{docsURL:"https://goteleport.com/docs/access-controls/guides/role-templates/",title:m,text:u.item.content,name:u.item.name,isNew:"creating"===u.status,onSave:function(e){const t="creating"===u.status;return i(e,t)},onClose:u.disregard,directions:s.createElement(f,null)}),"removing"===u.status&&s.createElement(b,{name:u.item.name,onClose:u.disregard,onDelete:()=>n(u.item.name)}))}function f(){return s.createElement(s.Fragment,null,"WARNING Roles are defined using"," ",s.createElement(a.rU,{color:"light",target:"_blank",href:"https://en.wikipedia.org/wiki/YAML"},"YAML format"),". YAML is sensitive to white space, so please be careful.")}const v=function(){const e=function(e){const[t,n]=(0,s.useState)([]),{attempt:a,run:r}=(0,h.Z)("processing");return(0,s.useEffect)((()=>{r((()=>e.resourceService.fetchRoles().then((e=>{n(e)}))))}),[]),{items:t,attempt:a,save:function(s,a){return a?e.resourceService.createRole(s).then((e=>{n([e,...t])})):e.resourceService.updateRole(s).then((e=>{n([e,...t.filter((t=>t.name!==e.name))])}))},remove:function(s){return e.resourceService.deleteRole(s).then((()=>{n(t.filter((e=>e.name!==s)))}))}}}((0,i.Z)());return s.createElement(E,e)}}}]);