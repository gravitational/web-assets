"use strict";(self.webpackChunk_gravitational_teleport=self.webpackChunk_gravitational_teleport||[]).push([[860],{6187:(e,t,n)=>{n.r(t),n.d(t,{default:()=>f});var r=n(2784),o=n(7849),a=n(7067),i=n(694),c=n(2682),l=n(3757);const s=function(e){let{onCreate:t}=e;return r.createElement(o.Zb,{maxWidth:"700px",p:6,as:o.kC,alignItems:"center"},r.createElement(l.Eye,{style:{textAlign:"center"},fontSize:"150px",color:"primary.lighter",mr:5}),r.createElement(o.xu,null,r.createElement(o.xv,{typography:"h6",mb:3,caps:!0},"Create Your First Github Connector"),r.createElement(o.xv,{typography:"subtitle1",mb:3},"Authentication connectors allow Teleport to authenticate users via an external identity source such as Okta, Active Directory, GitHub, etc. This authentication method is frequently called single sign-on (SSO)."),r.createElement(o.xv,{typography:"subtitle1"},"Open Source Teleport supports only GitHub connectors. Please"," ",r.createElement(o.xv,{as:"a",color:"light",href:"https://goteleport.com/docs/setup/admin/github-sso/",target:"_blank"},"view our documentation")," ","on how to configure a GitHub connector."),r.createElement(o.DF,{onClick:t,mt:4,width:"240px"},"New Github Connector")))};var u=n(3937);function m(e){let{name:t,id:n,onEdit:a,onDelete:i}=e;return r.createElement(o.kC,{style:{position:"relative",boxShadow:"0 8px 32px rgba(0, 0, 0, 0.24)"},width:"240px",height:"240px",borderRadius:"3",flexDirection:"column",alignItems:"center",justifyContent:"center",bg:"primary.light",px:"5",pt:"2",pb:"5",mb:4,mr:5},r.createElement(o.kC,{width:"100%",justifyContent:"center"},r.createElement(u.Oq,{buttonIconProps:h},r.createElement(u.sN,{onClick:()=>i(n)},"Delete..."))),r.createElement(o.kC,{flex:"1",alignItems:"center",justifyContent:"center",flexDirection:"column",width:"200px",style:{textAlign:"center"}},r.createElement(l.Eye,{style:{textAlign:"center"},fontSize:"50px",color:"text.primary",mb:3,mt:3}),r.createElement(o.xv,{style:{width:"100%"},typography:"body2",bold:!0,caps:!0},t)),r.createElement(o.DF,{mt:"auto",size:"medium",block:!0,onClick:()=>a(n)},"EDIT CONNECTOR"))}const h={style:{right:"10px",position:"absolute",top:"10px"}},p=function(e){let{items:t,onEdit:n,onDelete:a}=e;t=t||[];const i=t.map((e=>{const{id:t,name:o}=e;return r.createElement(m,{key:t,id:t,onEdit:n,onDelete:a,name:o})}));return r.createElement(o.kC,{flexWrap:"wrap",alignItems:"center",flex:1},i)};var g=n(4696),b=n(369);const d=function(e){const{name:t,onClose:n,onDelete:a}=e,{attempt:i,run:c}=(0,g.Z)(),l="processing"===i.status;return r.createElement(b.ZP,{dialogCss:()=>({maxWidth:"500px",width:"100%"}),disableEscapeKeyDown:!1,onClose:n,open:!0},r.createElement(b.fK,null,r.createElement(b.$N,null,"Remove Connector?")),r.createElement(b.cZ,null,"failed"===i.status&&r.createElement(o.bZ,{children:i.statusText}),r.createElement(o.xv,{typography:"paragraph",mb:"6"},"Are you sure you want to delete connector"," ",r.createElement(o.xv,{as:"span",bold:!0,color:"primary.contrastText"},t),"?")),r.createElement(b.cN,null,r.createElement(o.U3,{mr:"3",disabled:l,onClick:function(){c((()=>a())).then((e=>e&&n()))}},"Yes, Remove Connector"),r.createElement(o.PL,{disabled:l,onClick:n},"Cancel")))};var E=n(2398);const x={github:'kind: github\nversion: v3\nmetadata:\n  name: new_github_connector\nspec:\n  # Github OAuth app client ID\n  client_id: <client-id>\n  # Github OAuth app client secret\n  client_secret: <client-secret>\n  # Github will make a callback to this URL after successful authentication\n  # cluster-url is the address the cluster UI is reachable at\n  redirect_url: "https://<cluster-url>/v1/webapi/github/callback"\n  # connector display name that will be appended to the title of "Login with"\n  # button on the cluster login screen so it will say "Login with Github"\n  display: Github\n  # mapping of Github team memberships to Teleport roles\n  teams_to_roles:\n    - organization: <github-org>\n      team: <github-team>\n      roles:\n        - "access"\n'};function y(e){const{attempt:t,items:n,remove:l,save:u}=e,m=0===n.length,h=(0,c.Z)(n,x),g="creating"===h.status?"Creating a new github connector":"Editing github connector";return r.createElement(a.Ob,null,r.createElement(a.OX,null,r.createElement(a.u4,null,"Auth Connectors"),r.createElement(o.DF,{ml:"auto",width:"240px",onClick:()=>h.create("github")},"New Github Connector")),"failed"===t.status&&r.createElement(o.bZ,{children:t.statusText}),"processing"===t.status&&r.createElement(o.xu,{textAlign:"center",m:10},r.createElement(o.z$,null)),"success"===t.status&&r.createElement(o.kC,{alignItems:"start"},m&&r.createElement(o.kC,{mt:"4",width:"100%",justifyContent:"center"},r.createElement(s,{onCreate:()=>h.create("github")})),!m&&r.createElement(r.Fragment,null,r.createElement(p,{items:n,onEdit:h.edit,onDelete:h.remove}),r.createElement(o.xu,{ml:"4",width:"240px",color:"text.primary",style:{flexShrink:0}},r.createElement(o.xv,{typography:"h6",mb:3,caps:!0},"Authentication Connectors"),r.createElement(o.xv,{typography:"subtitle1",mb:3},"Authentication connectors allow Teleport to authenticate users via an external identity source such as Okta, Active Directory, GitHub, etc. This authentication method is frequently called single sign-on (SSO)."),r.createElement(o.xv,{typography:"subtitle1",mb:2},"Please"," ",r.createElement(o.rU,{color:"light",href:"https://goteleport.com/docs/setup/admin/github-sso/",target:"_blank"},"view our documentation")," ","on how to configure a GitHub connector.")))),("creating"===h.status||"editing"===h.status)&&r.createElement(i.Z,{title:g,onSave:function(e){const t="creating"===h.status;return u(e,t)},text:h.item.content,name:h.item.name,isNew:"creating"===h.status,onClose:h.disregard}),"removing"===h.status&&r.createElement(d,{name:h.item.name,onClose:h.disregard,onDelete:()=>l(h.item.name)}))}const f=function(){const e=function(){const e=(0,E.Z)(),[t,n]=(0,r.useState)([]),{attempt:o,run:a}=(0,g.Z)("processing");function i(){return e.resourceService.fetchGithubConnectors().then((e=>{n(e)}))}return(0,r.useEffect)((()=>{a((()=>i()))}),[]),{items:t,attempt:o,save:function(t,n){return n?e.resourceService.createGithubConnector(t).then(i):e.resourceService.updateGithubConnector(t).then(i)},remove:function(t){return e.resourceService.deleteGithubConnector(t).then(i)}}}();return r.createElement(y,e)}}}]);